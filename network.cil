;; -*- mode: CIL; fill-column: 79; indent-tabs-mode: nil; -*-
;; SPDX-License-Identifier: Unlicense

;; net
;;     ephemeral_port
;;         obj_stub
;;         obj_template
;;     generic_ephemeral_port
;;     generic_hi_reserved_port
;;     generic_if
;;     generic_infiniband_endport
;;     generic_infiniband_pkey
;;     generic_ipsec_spd
;;     generic_node
;;     generic_packet
;;     generic_peer
;;     generic_port
;;     generic_reserved_port
;;     generic_unreserved_port
;;     hi_reserved_port
;;         obj_stub
;;         obj_template
;;     if
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     infiniband_endport
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     infiniband_pkey
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     ipsec_spd
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     node
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     packet
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     peer
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     port
;;         obj_all_macro_template
;;     reserved_port
;;         obj_all_macro_template
;;         obj_stub
;;         obj_template
;;     unreserved_port
;;         obj_stub
;;         obj_template

;;
;; Policy
;;

(sid netif)
(sid netmsg)
(sid node)
(sid port)

(block net

       ;;
       ;; Macros
       ;;

       (macro unconfined_subj_type ((type ARG1))
              (typeattributeset unconfined_subj_type_attribute ARG1))

       ;;
       ;; Policy
       ;;

       (typeattribute unconfined_subj_type_attribute)

       (call sys.invalid.dccp_recvfrom (unconfined_subj_type_attribute))
       (call sys.invalid.icmp_recvfrom (unconfined_subj_type_attribute))
       (call sys.invalid.infiniband_endport_manage_subnet
             (unconfined_subj_type_attribute))
       (call sys.invalid.infiniband_pkey_access
             (unconfined_subj_type_attribute))
       (call sys.invalid.ipsec_association_recvfrom_sendto
             (unconfined_subj_type_attribute))
       (call sys.invalid.rawip_recvfrom (unconfined_subj_type_attribute))
       (call sys.invalid.sctp_association (unconfined_subj_type_attribute))
       (call sys.invalid.sctp_recvfrom (unconfined_subj_type_attribute))
       (call sys.invalid.tcp_recvfrom (unconfined_subj_type_attribute))
       (call sys.invalid.udp_recvfrom (unconfined_subj_type_attribute))
       (call sys.recv_and_send_invalid_packets_subj_type
             (unconfined_subj_type_attribute))
       (call sys.recv_invalid_peers_subj_type (unconfined_subj_type_attribute))

       (block ephemeral_port

              ;;
              ;; Macros
              ;;

              (blockinherit port.obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (call port.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context ephemeral_port_context
                              (sys.id sys.role ephemeral_port (systemlow
                                                               systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type ephemeral_port)
                     (call net.ephemeral_port.obj_type (ephemeral_port)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dccp_name_bind ((type ARG1))
                            (allow ARG1 self create_dccp_stream_socket_perms)
                            (allow ARG1 ephemeral_port (dccp_socket
                                                        (name_bind))))

                     (macro dccp_connect ((type ARG1))
                            (allow ARG1 self create_dccp_socket_perms)
                            (allow ARG1 ephemeral_port (dccp_socket
                                                        (name_connect))))

                     (macro icmp_name_bind ((type ARG1))
                            (allow ARG1 self create_icmp_socket_perms)
                            (allow ARG1 ephemeral_port (icmp_socket
                                                        (name_bind))))

                     (macro rawip_name_bind ((type ARG1))
                            (allow ARG1 self create_rawip_socket_perms)
                            (allow ARG1 ephemeral_port (rawip_socket
                                                        (name_bind))))

                     (macro sctp_name_bind ((type ARG1))
                            (allow ARG1 self create_sctp_stream_socket_perms)
                            (allow ARG1 ephemeral_port (sctp_socket
                                                        (name_bind))))

                     (macro sctp_connect ((type ARG1))
                            (allow ARG1 self create_sctp_socket_perms)
                            (allow ARG1 ephemeral_port (sctp_socket
                                                        (name_connect))))

                     (macro tcp_name_bind ((type ARG1))
                            (allow ARG1 self create_tcp_stream_socket_perms)
                            (allow ARG1 ephemeral_port (tcp_socket
                                                        (name_bind))))

                     (macro tcp_connect ((type ARG1))
                            (allow ARG1 self create_tcp_socket_perms)
                            (allow ARG1 ephemeral_port (tcp_socket
                                                        (name_connect))))

                     (macro udp_name_bind ((type ARG1))
                            (allow ARG1 self create_udp_socket_perms)
                            (allow ARG1 ephemeral_port (udp_socket
                                                        (name_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.ephemeral_port.obj_stub)))

       (block generic_ephemeral_port

              ;;
              ;; Contexts
              ;;

              (portcon "dccp" (32768 61000) ephemeral_port_context)
              (portcon "sctp" (32768 61000) ephemeral_port_context)
              (portcon "tcp" (32768 61000) ephemeral_port_context)
              (portcon "udp" (32768 61000) ephemeral_port_context)

              ;;
              ;; Policy
              ;;

              (blockinherit ephemeral_port.obj_template))

       (block generic_hi_reserved_port

              ;;
              ;; Contexts
              ;;

              (portcon "dccp" (512 1023) hi_reserved_port_context)
              (portcon "sctp" (512 1023) hi_reserved_port_context)
              (portcon "tcp" (512 1023) hi_reserved_port_context)
              (portcon "udp" (512 1023) hi_reserved_port_context)

              ;;
              ;; Policy
              ;;

              (blockinherit hi_reserved_port.obj_template))

       (block generic_if

              ;;
              ;; Contexts
              ;;

              (sidcontext netif isid_context)

              ;;
              ;; Macros
              ;;

              (macro egress ((type ARG1))
                     (allow ARG1 isid (netif (egress))))

              (macro ingress ((type ARG1))
                     (allow ARG1 isid (netif (ingress))))

              ;;
              ;; Policy
              ;;

              (blockinherit sys.isid.stub)

              (call if.obj_type (isid)))

       (block generic_infiniband_endport

              ;;
              ;; Policy
              ;;

              (blockinherit infiniband_endport.obj_template))

       (block generic_infiniband_pkey

              ;;
              ;; Policy
              ;;

              (blockinherit infiniband_pkey.obj_template))

       (block generic_ipsec_spd

              ;;
              ;; Policy
              ;;

              (blockinherit ipsec_spd.obj_template))

       (block generic_node

              ;;
              ;; Contexts
              ;;

              (sidcontext node isid_context)

              ;;
              ;; Macros
              ;;

              (macro dccp_node_bind ((type ARG1))
                     (allow ARG1 isid (dccp_socket (node_bind))))

              (macro icmp_node_bind ((type ARG1))
                     (allow ARG1 isid (icmp_socket (node_bind))))

              (macro rawip_node_bind ((type ARG1))
                     (allow ARG1 isid (rawip_socket (node_bind))))

              (macro sctp_node_bind ((type ARG1))
                     (allow ARG1 isid (sctp_socket (node_bind))))

              (macro recvfrom ((type ARG1))
                     (allow ARG1 isid (node (recvfrom))))

              (macro sendto ((type ARG1))
                     (allow ARG1 isid (node (sendto))))

              (macro tcp_node_bind ((type ARG1))
                     (allow ARG1 isid (tcp_socket (node_bind))))

              (macro udp_node_bind ((type ARG1))
                     (allow ARG1 isid (udp_socket (node_bind))))

              ;;
              ;; Policy
              ;;

              (blockinherit sys.isid.stub)

              (call node.obj_type (isid)))

       (block generic_packet

              ;;
              ;; Policy
              ;;

              (blockinherit packet.obj_template))

       (block generic_peer

              ;;
              ;; Contexts
              ;;

              (sidcontext netmsg isid_context)

              ;;
              ;; Macros
              ;;

              (macro peer_recv ((type ARG1))
                     (allow ARG1 isid (peer (recv))))

              (macro sctp_association ((type ARG1))
                     (allow ARG1 isid (sctp_socket (association))))

              ;;
              ;; Policy
              ;;

              (blockinherit sys.isid.stub)

              (call peer.obj_type (isid))

              (call net.generic_if.ingress (isid))
              (call net.generic_node.recvfrom (isid)))

       (block generic_port

              ;;
              ;; Contexts
              ;;

              (sidcontext port isid_context)

              ;;
              ;; Macros
              ;;

              (macro dccp_name_bind ((type ARG1))
                     (allow ARG1 self create_dccp_stream_socket_perms)
                     (allow ARG1 isid (dccp_socket (name_bind))))

              (macro dccp_connect ((type ARG1))
                     (allow ARG1 self create_dccp_socket_perms)
                     (allow ARG1 isid (dccp_socket (name_connect))))

              (macro icmp_name_bind ((type ARG1))
                     (allow ARG1 self create_icmp_socket_perms)
                     (allow ARG1 isid (icmp_socket (name_bind))))

              (macro rawip_name_bind ((type ARG1))
                     (allow ARG1 self create_rawip_socket_perms)
                     (allow ARG1 isid (rawip_socket (name_bind))))

              (macro sctp_name_bind ((type ARG1))
                     (allow ARG1 self create_sctp_stream_socket_perms)
                     (allow ARG1 isid (sctp_socket (name_bind))))

              (macro sctp_connect ((type ARG1))
                     (allow ARG1 self create_sctp_socket_perms)
                     (allow ARG1 isid (sctp_socket (name_connect))))

              (macro tcp_name_bind ((type ARG1))
                     (allow ARG1 self create_tcp_stream_socket_perms)
                     (allow ARG1 isid (tcp_socket (name_bind))))

              (macro tcp_connect ((type ARG1))
                     (allow ARG1 self create_tcp_socket_perms)
                     (allow ARG1 isid (tcp_socket (name_connect))))

              (macro udp_name_bind ((type ARG1))
                     (allow ARG1 self create_udp_socket_perms)
                     (allow ARG1 isid (udp_socket (name_bind))))

              ;;
              ;; Policy
              ;;

              (blockinherit sys.isid.stub)

              (call port.obj_type (isid)))

       (block generic_reserved_port

              ;;
              ;; Contexts
              ;;

              (portcon "dccp" (1 511) reserved_port_context)
              (portcon "sctp" (1 511) reserved_port_context)
              (portcon "tcp" (1 511) reserved_port_context)
              (portcon "udp" (1 511) reserved_port_context)

              ;;
              ;; Policy
              ;;

              (blockinherit reserved_port.obj_template))

       (block generic_unreserved_port

              ;;
              ;; Contexts
              ;;

              (portcon "dccp" (1023 32767) unreserved_port_context)
              (portcon "dccp" (61001 65535) unreserved_port_context)
              (portcon "sctp" (1023 32767) unreserved_port_context)
              (portcon "sctp" (61001 65535) unreserved_port_context)
              (portcon "tcp" (1023 32767) unreserved_port_context)
              (portcon "tcp" (61001 65535) unreserved_port_context)
              (portcon "udp" (1023 32767) unreserved_port_context)
              (portcon "udp" (61001 65535) unreserved_port_context)

              ;;
              ;; Policy
              ;;

              (blockinherit unreserved_port.obj_template))

       (block hi_reserved_port

              ;;
              ;; Macros
              ;;

              (blockinherit reserved_port.obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (call reserved_port.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context hi_reserved_port_context
                              (sys.id sys.role hi_reserved_port (systemlow
                                                                 systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type hi_reserved_port)
                     (call net.hi_reserved_port.obj_type (hi_reserved_port)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dccp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_dccp_stream_socket_perms)
                            (allow ARG1 hi_reserved_port (dccp_socket
                                                          (name_bind))))

                     (macro dccp_connect ((type ARG1))
                            (allow ARG1 self create_dccp_socket_perms)
                            (allow ARG1 hi_reserved_port (dccp_socket
                                                          (name_connect))))

                     (macro icmp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_icmp_socket_perms)
                            (allow ARG1 hi_reserved_port (icmp_socket
                                                          (name_bind))))

                     (macro rawip_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_rawip_socket_perms)
                            (allow ARG1 hi_reserved_port (rawip_socket
                                                          (name_bind))))

                     (macro sctp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_sctp_stream_socket_perms)
                            (allow ARG1 hi_reserved_port (sctp_socket
                                                          (name_bind))))

                     (macro sctp_connect ((type ARG1))
                            (allow ARG1 self create_sctp_socket_perms)
                            (allow ARG1 hi_reserved_port (sctp_socket
                                                          (name_connect))))

                     (macro tcp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_tcp_stream_socket_perms)
                            (allow ARG1 hi_reserved_port (tcp_socket
                                                          (name_bind))))

                     (macro tcp_connect ((type ARG1))
                            (allow ARG1 self create_tcp_socket_perms)
                            (allow ARG1 hi_reserved_port (tcp_socket
                                                          (name_connect))))

                     (macro udp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_udp_socket_perms)
                            (allow ARG1 hi_reserved_port (udp_socket
                                                          (name_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.hi_reserved_port.obj_stub)))

       (block if

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (netif (egress ingress)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro egress ((type ARG1))
                            (allow ARG1 obj_type_attribute (netif (egress))))

                     (macro ingress ((type ARG1))
                            (allow ARG1 obj_type_attribute (netif (ingress))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context if_context (sys.id sys.role if (systemlow
                                                              systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type if)
                     (call net.if.obj_type (if)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro egress ((type ARG1))
                            (allow ARG1 if (netif (egress))))

                     (macro ingress ((type ARG1))
                            (allow ARG1 if (netif (ingress))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.if.obj_stub)))

       (block infiniband_endport

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (infiniband_endport (manage_subnet)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro manage_subnet ((type ARG1))
                            (allow ARG1 obj_type_attribute (infiniband_endport
                                                            (manage_subnet))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context infiniband_endport_context
                              (sys.id sys.role infiniband_endport (systemlow
                                                                   systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type infiniband_endport)
                     (call net.infiniband_endport.obj_type
                           (infiniband_endport)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro manage_subnet ((type ARG1))
                            (allow ARG1 infiniband_endport (infiniband_endport
                                                            (manage_subnet))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.infiniband_endport.obj_stub)))

       (block infiniband_pkey

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (infiniband_pkey (access)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro access ((type ARG1))
                            (allow ARG1 obj_type_attribute (infiniband_pkey
                                                            (access))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context infiniband_pkey_context
                              (sys.id sys.role infiniband_pkey (systemlow
                                                                systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type infiniband_pkey)
                     (call net.infiniband_pkey.obj_type (infiniband_pkey)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro access ((type ARG1))
                            (allow ARG1 infiniband_pkey (infiniband_pkey
                                                         (access))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.infiniband_pkey.obj_stub)))

       (block ipsec_spd

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute self (association
                                                          (recvfrom sendto)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (association (polmatch setcontext)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro association_polmatch ((type ARG1))
                            (allow ARG1 obj_type_attribute (association
                                                            (polmatch))))

                     (macro association_setcontext ((type ARG1))
                            (allow ARG1 obj_type_attribute (association
                                                            (setcontext))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type ipsec_spd)
                     (call net.ipsec_spd.obj_type (ipsec_spd)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro association_polmatch ((type ARG1))
                            (allow ARG1 ipsec_spd (association (polmatch))))

                     (macro association_setcontext ((type ARG1))
                            (allow ARG1 ipsec_spd (association (setcontext))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.ipsec_spd.obj_stub)))

       (block node

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (dccp_socket (node_bind)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (icmp_socket (node_bind)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (node (recvfrom sendto)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (rawip_socket (node_bind)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (sctp_socket (node_bind)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (tcp_socket (node_bind)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (udp_socket (node_bind)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dccp_node_bind ((type ARG1))
                            (allow ARG1 obj_type_attribute (dccp_socket
                                                            (node_bind))))

                     (macro icmp_node_bind ((type ARG1))
                            (allow ARG1 obj_type_attribute (icmp_socket
                                                            (node_bind))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     (macro rawip_node_bind ((type ARG1))
                            (allow ARG1 obj_type_attribute (rawip_socket
                                                            (node_bind))))

                     (macro sctp_node_bind ((type ARG1))
                            (allow ARG1 obj_type_attribute (sctp_socket
                                                            (node_bind))))

                     (macro recvfrom ((type ARG1))
                            (allow ARG1 obj_type_attribute (node (recvfrom))))

                     (macro sendto ((type ARG1))
                            (allow ARG1 obj_type_attribute (node (sendto))))

                     (macro tcp_node_bind ((type ARG1))
                            (allow ARG1 obj_type_attribute (tcp_socket
                                                            (node_bind))))

                     (macro udp_node_bind ((type ARG1))
                            (allow ARG1 obj_type_attribute (udp_socket
                                                            (node_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context node_context (sys.id sys.role node (systemlow
                                                                  systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type node)
                     (call net.node.obj_type (node)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dccp_node_bind ((type ARG1))
                            (allow ARG1 node (dccp_socket (node_bind))))

                     (macro icmp_node_bind ((type ARG1))
                            (allow ARG1 node (icmp_socket (node_bind))))

                     (macro rawip_node_bind ((type ARG1))
                            (allow ARG1 node (rawip_socket (node_bind))))

                     (macro sctp_node_bind ((type ARG1))
                            (allow ARG1 node (sctp_socket (node_bind))))

                     (macro recvfrom ((type ARG1))
                            (allow ARG1 node (node (recvfrom))))

                     (macro sendto ((type ARG1))
                            (allow ARG1 node (node (sendto))))

                     (macro tcp_node_bind ((type ARG1))
                            (allow ARG1 node (tcp_socket (node_bind))))

                     (macro udp_node_bind ((type ARG1))
                            (allow ARG1 node (udp_socket (node_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.node.obj_stub)))

       (block packet

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (packet (forward_in forward_out recv relabelto send)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro forward_in ((type ARG1))
                            (allow ARG1 obj_type_attribute (packet
                                                            (forward_in))))

                     (macro forward_out ((type ARG1))
                            (allow ARG1 obj_type_attribute (packet
                                                            (forward_out))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     (macro packet_recv ((type ARG1))
                            (allow ARG1 obj_type_attribute (packet (recv))))

                     (macro packet_relabelto ((type ARG1))
                            (allow ARG1 obj_type_attribute (packet
                                                            (relabelto))))

                     (macro packet_send ((type ARG1))
                            (allow ARG1 obj_type_attribute (packet (send))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type packet)
                     (call net.packet.obj_type (packet)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro forward_in ((type ARG1))
                            (allow ARG1 packet (packet (forward_in))))

                     (macro forward_out ((type ARG1))
                            (allow ARG1 packet (packet (forward_out))))

                     (macro packet_recv ((type ARG1))
                            (allow ARG1 packet (packet (recv))))

                     (macro packet_relabelto ((type ARG1))
                            (allow ARG1 packet (packet (relabelto))))

                     (macro packet_send ((type ARG1))
                            (allow ARG1 packet (packet (send))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.packet.obj_stub)))

       (block peer

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (peer (recv)))

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (sctp_socket (association)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     (macro peer_recv ((type ARG1))
                            (allow ARG1 obj_type_attribute (peer (recv))))

                     (macro sctp_association ((type ARG1))
                            (allow ARG1 obj_type_attribute (sctp_socket
                                                            (association))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type peer)
                     (call net.peer.obj_type (peer)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro peer_recv ((type ARG1))
                            (allow ARG1 peer (peer (recv))))

                     (macro sctp_association ((type ARG1))
                            (allow ARG1 peer (sctp_socket (association))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.peer.obj_stub)))

       (block port

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (allow unconfined_subj_type_attribute obj_type_attribute
                     (dccp_socket (name_bind name_connect)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (icmp_socket (name_bind)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (rawip_socket (name_bind)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (sctp_socket (name_bind name_connect)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (tcp_socket (name_bind name_connect)))
              (allow unconfined_subj_type_attribute obj_type_attribute
                     (udp_socket (name_bind)))

              (call sys.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dontaudit_tcp_connect ((type ARG1))
                            (dontaudit ARG1 obj_type_attribute
                                       (tcp_socket (name_connect))))

                     (macro dccp_name_bind ((type ARG1))
                            (allow ARG1 self create_dccp_stream_socket_perms)
                            (allow ARG1 obj_type_attribute (dccp_socket
                                                            (name_bind))))

                     (macro dccp_connect ((type ARG1))
                            (allow ARG1 self create_dccp_socket_perms)
                            (allow ARG1 obj_type_attribute (dccp_socket
                                                            (name_connect))))

                     (macro icmp_name_bind ((type ARG1))
                            (allow ARG1 self create_icmp_socket_perms)
                            (allow ARG1 obj_type_attribute (icmp_socket
                                                            (name_bind))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     (macro rawip_name_bind ((type ARG1))
                            (allow ARG1 self create_rawip_socket_perms)
                            (allow ARG1 obj_type_attribute (rawip_socket
                                                            (name_bind))))

                     (macro sctp_name_bind ((type ARG1))
                            (allow ARG1 self create_sctp_stream_socket_perms)
                            (allow ARG1 obj_type_attribute (sctp_socket
                                                            (name_bind))))

                     (macro sctp_connect ((type ARG1))
                            (allow ARG1 self create_sctp_socket_perms)
                            (allow ARG1 obj_type_attribute (sctp_socket
                                                            (name_connect))))

                     (macro tcp_name_bind ((type ARG1))
                            (allow ARG1 self create_tcp_stream_socket_perms)
                            (allow ARG1 obj_type_attribute (tcp_socket
                                                            (name_bind))))

                     (macro tcp_connect ((type ARG1))
                            (allow ARG1 self create_tcp_socket_perms)
                            (allow ARG1 obj_type_attribute (tcp_socket
                                                            (name_connect))))

                     (macro udp_name_bind ((type ARG1))
                            (allow ARG1 self create_udp_socket_perms)
                            (allow ARG1 obj_type_attribute (udp_socket
                                                            (name_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template)))

       (block reserved_port

              ;;
              ;; Macros
              ;;

              (blockinherit obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (call port.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_all_macro_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dccp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_dccp_stream_socket_perms)
                            (allow ARG1 obj_type_attribute (dccp_socket
                                                            (name_bind))))

                     (macro dccp_connect ((type ARG1))
                            (allow ARG1 self create_dccp_socket_perms)
                            (allow ARG1 obj_type_attribute (dccp_socket
                                                            (name_connect))))

                     (macro icmp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_icmp_socket_perms)
                            (allow ARG1 obj_type_attribute (icmp_socket
                                                            (name_bind))))

                     (macro obj_type ((type ARG1))
                            (typeattributeset obj_type_attribute ARG1))

                     (macro rawip_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_rawip_socket_perms)
                            (allow ARG1 obj_type_attribute (rawip_socket
                                                            (name_bind))))

                     (macro sctp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_sctp_stream_socket_perms)
                            (allow ARG1 obj_type_attribute (sctp_socket
                                                            (name_bind))))

                     (macro sctp_connect ((type ARG1))
                            (allow ARG1 self create_sctp_socket_perms)
                            (allow ARG1 obj_type_attribute (sctp_socket
                                                            (name_connect))))

                     (macro tcp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_tcp_stream_socket_perms)
                            (allow ARG1 obj_type_attribute (tcp_socket
                                                            (name_bind))))

                     (macro dontaudit_tcp_connect ((type ARG1))
                            (dontaudit ARG1 obj_type_attribute
                                       (tcp_socket (name_connect))))

                     (macro tcp_connect ((type ARG1))
                            (allow ARG1 self create_tcp_socket_perms)
                            (allow ARG1 obj_type_attribute (tcp_socket
                                                            (name_connect))))

                     (macro udp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_udp_socket_perms)
                            (allow ARG1 obj_type_attribute (udp_socket
                                                            (name_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_all_macro_template))

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context reserved_port_context
                              (sys.id sys.role reserved_port (systemlow
                                                              systemlow)))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type reserved_port)
                     (call net.reserved_port.obj_type (reserved_port)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dccp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_dccp_stream_socket_perms)
                            (allow ARG1 reserved_port (dccp_socket
                                                       (name_bind))))

                     (macro dccp_connect ((type ARG1))
                            (allow ARG1 self create_dccp_socket_perms)
                            (allow ARG1 reserved_port (dccp_socket
                                                       (name_connect))))

                     (macro icmp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_icmp_socket_perms)
                            (allow ARG1 reserved_port (icmp_socket
                                                       (name_bind))))

                     (macro rawip_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_rawip_socket_perms)
                            (allow ARG1 reserved_port (rawip_socket
                                                       (name_bind))))

                     (macro sctp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_sctp_stream_socket_perms)
                            (allow ARG1 reserved_port (sctp_socket
                                                       (name_bind))))

                     (macro sctp_connect ((type ARG1))
                            (allow ARG1 self create_sctp_socket_perms)
                            (allow ARG1 reserved_port (sctp_socket
                                                       (name_connect))))

                     (macro tcp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_tcp_stream_socket_perms)
                            (allow ARG1 reserved_port (tcp_socket
                                                       (name_bind))))

                     (macro tcp_connect ((type ARG1))
                            (allow ARG1 self create_tcp_socket_perms)
                            (allow ARG1 reserved_port (tcp_socket
                                                       (name_connect))))

                     (macro udp_name_bind ((type ARG1))
                            (allow ARG1 self (capability (net_bind_service)))
                            (allow ARG1 self create_udp_socket_perms)
                            (allow ARG1 reserved_port (udp_socket
                                                       (name_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.reserved_port.obj_stub)))

       (block unreserved_port

              ;;
              ;; Macros
              ;;

              (blockinherit port.obj_all_macro_template)

              ;;
              ;; Policy
              ;;

              (typeattribute obj_type_attribute)

              (call port.obj_type (obj_type_attribute))

              ;;
              ;; Templates
              ;;

              (block obj_stub

                     ;;
                     ;; Contexts
                     ;;

                     (context unreserved_port_context
                              (sys.id sys.role unreserved_port (systemlow
                                                                systemlow)))
                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_stub)

                     (type unreserved_port)
                     (call net.unreserved_port.obj_type (unreserved_port)))

              (block obj_template

                     ;;
                     ;; Macros
                     ;;

                     (macro dontaudit_tcp_connect ((type ARG1))
                            (dontaudit ARG1 unreserved_port (tcp_socket
                                                             (name_connect))))

                     (macro dccp_name_bind ((type ARG1))
                            (allow ARG1 self create_dccp_stream_socket_perms)
                            (allow ARG1 unreserved_port (dccp_socket
                                                         (name_bind))))

                     (macro dccp_connect ((type ARG1))
                            (allow ARG1 self create_dccp_socket_perms)
                            (allow ARG1 unreserved_port (dccp_socket
                                                         (name_connect))))

                     (macro icmp_name_bind ((type ARG1))
                            (allow ARG1 self create_icmp_socket_perms)
                            (allow ARG1 unreserved_port (icmp_socket
                                                         (name_bind))))

                     (macro rawip_name_bind ((type ARG1))
                            (allow ARG1 self create_rawip_socket_perms)
                            (allow ARG1 unreserved_port (rawip_socket
                                                         (name_bind))))

                     (macro sctp_name_bind ((type ARG1))
                            (allow ARG1 self create_sctp_stream_socket_perms)
                            (allow ARG1 unreserved_port (sctp_socket
                                                         (name_bind))))

                     (macro sctp_connect ((type ARG1))
                            (allow ARG1 self create_sctp_socket_perms)
                            (allow ARG1 unreserved_port (sctp_socket
                                                         (name_connect))))

                     (macro tcp_name_bind ((type ARG1))
                            (allow ARG1 self create_tcp_stream_socket_perms)
                            (allow ARG1 unreserved_port (tcp_socket
                                                         (name_bind))))

                     (macro tcp_connect ((type ARG1))
                            (allow ARG1 self create_tcp_socket_perms)
                            (allow ARG1 unreserved_port (tcp_socket
                                                         (name_connect))))

                     (macro udp_name_bind ((type ARG1))
                            (allow ARG1 self create_udp_socket_perms)
                            (allow ARG1 unreserved_port (udp_socket
                                                         (name_bind))))

                     ;;
                     ;; Policy
                     ;;

                     (blockabstract obj_template)

                     (blockinherit net.unreserved_port.obj_stub))))
