; -*- mode: CIL; fill-column: 75; indent-tabs-mode: nil; tab-width: 4 -*-

; Sec policy
;
; 1. Sec initial security identifier declarations
; 2. Sec name space
;       Sec bool_file name space
;       Sec load_policy name space
;       Sec securityfs name space

;
; Sec initial security identifier declarations
;

(sid security)

;
; Sec name space
;

(block sec

    ;
    ; Macros
    ;

    (macro compute_access_vector ((type ARG1))
        (allow ARG1 securityfs.isid
            (security
                (
                    compute_av
                )
            )
        )
        (call securityfs.list
            (
                ARG1
            )
        )
        (call securityfs.rw_files
            (
                ARG1
            )
        )
    )

    (macro compute_create_context ((type ARG1))
        (allow ARG1 securityfs.isid
            (security
                (
                    compute_create
                )
            )
        )
        (call securityfs.list
            (
                ARG1
            )
        )
        (call securityfs.rw_files
            (
                ARG1
            )
        )
    )

    (macro compute_relabel_context ((type ARG1))
        (allow ARG1 securityfs.isid
            (security
                (
                    compute_relabel
                )
            )
        )
        (call securityfs.list
            (
                ARG1
            )
        )
        (call securityfs.rw_files
            (
                ARG1
            )
        )
    )

    (macro compute_user_context ((type ARG1))
        (allow ARG1 securityfs.isid
            (security
                (
                    compute_user
                )
            )
        )
        (call securityfs.list
            (
                ARG1
            )
        )
        (call securityfs.rw_files
            (
                ARG1
            )
        )
    )

    (macro load_policy_subj_type ((type ARG1))
        (typeattributeset load_policy_subj_type_attribute ARG1)
    )

    (macro read_policy ((type ARG1))
        (allow ARG1 securityfs.isid
            (security
                (
                    read_policy
                )
            )
        )
        (call securityfs.list
            (
                ARG1
            )
        )
        (call securityfs.read_files
            (
                ARG1
            )
        )
    )

    (macro set_enforce_subj_type ((type ARG1))
        (typeattributeset set_enforce_subj_type_attribute ARG1)
    )

    (macro set_checkreqprot ((type ARG1))
        (allow ARG1 securityfs.isid
            (security
                (
                    setcheckreqprot
                )
            )
        )
        (call securityfs.list
            (
                ARG1
            )
        )
        (call securityfs.rw_files
            (
                ARG1
            )
        )
    )

    (macro set_fscreate_subj_type ((type ARG1))
        (typeattributeset set_fscreate_subj_type_attribute ARG1)
    )

    (macro set_secparam_subj_type ((type ARG1))
        (typeattributeset set_secparam_subj_type_attribute ARG1)
    )

    (macro unconfined_subj_type ((type ARG1))
        (typeattributeset unconfined_subj_type_attribute ARG1)
    )

    (macro validate_context ((type ARG1))
        (allow ARG1 securityfs.isid
            (security
                (
                    check_context
                )
            )
        )
        (call securityfs.list
            (
                ARG1
            )
        )
        (call securityfs.rw_files
            (
                ARG1
            )
        )
    )

    ;
    ; Policy
    ;

    (boolean load_policy true)

    (typeattribute load_policy_subj_type_attribute)
    (typeattribute
        load_policy_subj_type_and_unconfined_subj_type_attribute)
    (typeattribute
        load_policy_subj_type_set_enforce_subj_type_and_set_secparam_subj_type_attribute)
    (typeattribute
        not_load_policy_subj_type_or_unconfined_subj_type_attribute)

    (typeattribute set_enforce_subj_type_attribute)
    (typeattribute
        set_enforce_subj_type_and_unconfined_subj_type_attribute)
    (typeattribute
        not_set_enforce_subj_type_or_unconfined_subj_type_attribute)

    (typeattribute set_fscreate_subj_type_attribute)

    (typeattribute set_secparam_subj_type_attribute)
    (typeattribute
        not_set_secparam_subj_type_or_unconfined_subj_type_attribute)

    (typeattribute unconfined_subj_type_attribute)

    (typeattributeset
        load_policy_subj_type_and_unconfined_subj_type_attribute
            (
                load_policy_subj_type_attribute
                unconfined_subj_type_attribute
            )
    )

    (typeattributeset
        load_policy_subj_type_set_enforce_subj_type_and_set_secparam_subj_type_attribute
            (
                load_policy_subj_type_attribute
                set_enforce_subj_type_attribute
                set_secparam_subj_type_attribute
            )
    )

    (typeattributeset
        not_load_policy_subj_type_or_unconfined_subj_type_attribute
            (not
                (
                    load_policy_subj_type_attribute
                    unconfined_subj_type_attribute
                )
            )
    )

    (typeattributeset
        set_enforce_subj_type_and_unconfined_subj_type_attribute
            (
                set_enforce_subj_type_attribute
                unconfined_subj_type_attribute
            )
    )

    (typeattributeset
        not_set_enforce_subj_type_or_unconfined_subj_type_attribute
            (not
                (
                    set_enforce_subj_type_attribute
                    unconfined_subj_type_attribute
                )
            )
    )

    (typeattributeset
        not_set_secparam_subj_type_or_unconfined_subj_type_attribute
            (not
                (
                    set_secparam_subj_type_attribute
                    unconfined_subj_type_attribute
                )
            )
    )

    ;
    ; Sec bool_file name space
    ;

    (block bool_file

        ;
        ; bool_file macros
        ;

        (macro get ((type ARG1))
            (allow ARG1 obj_type_attribute read_file_perms)
            (call securityfs.list
                (
                    ARG1
                )
            )
        )


        (macro obj_type ((type ARG1))
            (typeattributeset obj_type_attribute ARG1)
        )

        (macro set ((type ARG1))
            (allow ARG1 securityfs.isid
                (security
                    (
                        setbool
                    )
                )
            )
            (allow ARG1 obj_type_attribute read_file_perms)
            (allow ARG1
                obj_type_except_sec_load_policy_obj_type_attribute
                    (file
                        (
                            append
                            write
                        )
                    )
            )
            (call securityfs.list
                (
                    ARG1
                )
            )
            (call securityfs.rw_files
                (
                    ARG1
                )
            )
            (booleanif
                (
                    load_policy
                )
                    (true
                        (allow ARG1 load_policy.bool_file
                            (file
                                (
                                    append
                                    write
                                )
                           )
                       )
                   )
            )
        )

        ;
        ; bool_file policy
        ;

        (typeattribute obj_type_attribute)

        (typeattribute obj_type_except_sec_load_policy_obj_type_attribute)

        (typeattributeset
            obj_type_except_sec_load_policy_obj_type_attribute
                (and
                    (
                        bool_file.obj_type_attribute
                    )
                        (not
                            (
                                load_policy.bool_file
                            )
                        )
                )
        )

        (allow unconfined_subj_type_attribute obj_type_attribute
            read_file_perms)
        (allow unconfined_subj_type_attribute
            obj_type_except_sec_load_policy_obj_type_attribute
                (file
                    (
                        append
                        write
                    )
                )
        )

        (call sys.obj_type
            (
                obj_type_attribute
            )
        )
        
        ;
        ; bool_file templates
        ;

        (block obj_stub

            ;
            ; bool_file.obj_stub context
            ;

            (context bool_file_context
                (
                    sys.id
                    sys.role
                    bool_file
                        (
                            systemlow
                            systemlow
                        )
                )
            )

            ;
            ; bool_file.obj_stub policy
            ;

            (blockabstract obj_stub)

            (type bool_file)
            (call sec.bool_file.obj_type
                (
                    bool_file
                )
            )
        )

        (block obj_template

            ;
            ; bool_file.obj_template macros
            ;

            (macro get ((type ARG1))
                (allow ARG1 bool_file read_file_perms)
                (call securityfs.list
                    (
                        ARG1
                    )
                )
            )

            (macro set ((type ARG1))
                (allow ARG1 bool_file rw_file_perms)
                (allow ARG1 securityfs.isid
                    (security
                        (
                            setbool
                        )
                    )
                )
                (call securityfs.list
                    (
                        ARG1
                    )
                )
                (call securityfs.rw_files
                    (
                        ARG1
                    )
                )
            )

            ;
            ; bool_file.obj_template policy
            ;

            (blockabstract obj_template)

            (blockinherit sec.bool_file.obj_stub)
        )
    )

    ;
    ; Sec load_policy name space
    ;

    (block load_policy

        ;
        ; load_policy contexts
        ;

        (genfscon "selinuxfs" "/booleans/sec.load_policy"
            bool_file_context)

        ;
        ; load_policy macros
        ;

        (macro get ((type ARG1))
            (allow ARG1 bool_file read_file_perms)
            (call securityfs.list
                (
                    ARG1
                )
            )
        )

        (macro set ((type ARG1))
            (allow ARG1 securityfs.isid
                (security
                    (
                        setbool
                    )
                )
            )
            (call securityfs.list
                (
                    ARG1
                )
            )
            (call securityfs.rw_files
                (
                    ARG1
                )
            )
            (booleanif
                (
                    load_policy
                )
                    (true
                        (allow ARG1 bool_file rw_file_perms)
                    )
            )
        )

        ;
        ; load_policy policy
        ;

        (blockinherit sec.bool_file.obj_stub)

        (booleanif load_policy
            (true
                (allow unconfined_subj_type_attribute bool_file
                    (file
                        (
                            append
                            write
                        )
                    )
                )
            )
        )
    )

    ;
    ; Sec securityfs name space
    ;

    (block securityfs

        ;
        ; securityfs contexts
        ;

        (genfscon "securityfs" "/" isid_context)
        (genfscon "selinuxfs" "/" isid_context)

        (sidcontext security isid_context)

        ;
        ; securityfs macros
        ;

        (macro associate ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        associate
                    )
                )
            )
        )

        (macro getattr ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        getattr
                    )
                )
            )
        )

        (macro list ((type ARG1))
            (allow ARG1 isid list_dir_perms)
            (call fs.sysfs.search
                (
                    ARG1
                )
            )
        )

        (macro mount ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        mount
                    )
                )
            )
        )

        (macro mounton_files ((type ARG1))
            (allow ARG1 isid
                (file
                    (
                        mounton
                    )
                )
            )
            (call search
                (
                    ARG1
                )
            )
        )

        (macro quotaget ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        quotaget
                    )
                )
            )
        )

        (macro quotamod ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        quotamod
                    )
                )
            )
        )

        (macro read_files ((type ARG1))
            (allow ARG1 isid
                (files
                    (
                        read
                    )
                )
            )
            (call fs.sysfs.search
                (
                    ARG1
                )
            )
        )

        (macro relabel ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        getattr
                        relabelfrom
                        relabelto
                    )
                )
            )
        )

        (macro relabelfrom ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        getattr
                        relabelfrom
                    )
                )
            )
        )

        (macro relabelto ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        getattr
                        relabelto
                    )
                )
            )
        )

        (macro remount ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        remount
                    )
                )
            )
        )

        (macro rw_files ((type ARG1))
            (allow ARG1 isid
                (files
                    (
                        rw
                    )
                )
            )
            (call fs.sysfs.search
                (
                    ARG1
                )
            )
        )

        (macro search ((type ARG1))
            (allow ARG1 isid search_dir_perms)
            (call fs.sysfs.search
                (
                    ARG1
                )
            )
        )

        (macro unmount ((type ARG1))
            (allow ARG1 isid
                (filesystem
                    (
                        unmount
                    )
                )
            )
        )

        ;
        ; securityfs policy
        ;

        (blockinherit sys.isid.stub)

        (neverallow
            not_load_policy_subj_type_or_unconfined_subj_type_attribute
                isid
                    (security
                        (
                            load_policy
                        )
                    )
        )

        (neverallow
            not_set_enforce_subj_type_or_unconfined_subj_type_attribute
                isid
                    (security
                        (
                            setenforce
                        )
                    )
        )

        (neverallow
            not_set_secparam_subj_type_or_unconfined_subj_type_attribute
                isid
                    (security
                        (
                            setsecparam
                        )
                    )
        )

        (call bool_file.obj_type
            (
                isid
            )
        )

        (call fs.obj_type
            (
                isid
            )
        )

        (allow set_fscreate_subj_type_attribute self
            (process
                (
                    setfscreate
                )
            )
        )

        (call read_files
            (
                set_fscreate_subj_type_attribute
            )
        )

        (allow set_secparam_subj_type_attribute isid
            (security
                (
                    setsecparam
                )
            )
        )

        (auditallow set_secparam_subj_type_attribute isid
            (security
                (
                    setsecparam
                )
            )
        )

        (call list
            (
                 load_policy_subj_type_set_enforce_subj_type_and_set_secparam_subj_type_attribute
            )
        )
        (call rw_files
            (
                 load_policy_subj_type_set_enforce_subj_type_and_set_secparam_subj_type_attribute
            )
        )

        (allow unconfined_subj_type_attribute isid list_dir_perms)
        (allow unconfined_subj_type_attribute isid
            security_except_load_policy_and_setenforce)

        (booleanif load_policy
            (true
                (allow
                    set_enforce_subj_type_and_unconfined_subj_type_attribute
                        isid
                            (security
                                (
                                    setenforce
                                )
                            )
                )
                (allow
                    load_policy_subj_type_and_unconfined_subj_type_attribute
                        isid
                            (security
                                (
                                    load_policy
                                )
                            )
                )
            )
        )
    )
)
